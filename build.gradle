group 'com.poople.promat'
version '1.0'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

sourceCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'
repositories {
    mavenCentral()
}

// Fills out all dependencies which are necessary to start the embedded jetty into our war file
configurations {
 	embeddedJetty
}

dependencies {

	embeddedJetty group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.1.1.v20140108'
	embeddedJetty group: 'org.eclipse.jetty', name: 'jetty-continuation', version: '9.1.1.v20140108'
	embeddedJetty group: 'org.eclipse.jetty', name: 'jetty-http', version: '9.1.1.v20140108'
	embeddedJetty group: 'org.eclipse.jetty', name: 'jetty-io', version: '9.1.1.v20140108'
	embeddedJetty group: 'org.eclipse.jetty', name: 'jetty-util', version: '9.1.1.v20140108'
	embeddedJetty group: 'org.eclipse.jetty', name: 'jetty-webapp', version: '9.1.1.v20140108'
	embeddedJetty group: 'org.eclipse.jetty', name: 'jetty-annotations', version: '9.1.1.v20140108'
   
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.13'
    compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.13'

    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.23'
    runtime group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.23'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    runtime group: 'log4j', name: 'log4j', version: '1.2.17'

    compile group: 'com.j256.ormlite', name: 'ormlite-jdbc', version: '4.48'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2'
    compile group: 'javax.persistence', name: 'persistence-api', version: '1.0-rev-1'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-jetty', version: '2.22.1'
}

war.baseName = 'promat'
war {
	// unzip and add all jetty dependencies into the root of our war file
	from {
		configurations.embeddedJetty.collect {
			project.zipTree(it)
		}
	}
	// remove signature and unnecessary files
	exclude "META-INF/*.SF", "META-INF/*.RSA", "about.html", "about_files/**", "readme.txt", "plugin.properties", "jetty-dir.css"
	
	
	// include in the root of the war only the classes which will be used to start the embedded Jetty
	from "$buildDir/classes/main"
		exclude "com/poople"
	 
	// sets the main class to run when the generate war be executed using 'java -jar'
	manifest { attributes 'Main-Class': 'com.embedded.JettyStarter' }
}


// Once you will need some basic api (servlet api, for example) for compilation, you need to add embeddedJetty dependencies for compilation
sourceSets.main.compileClasspath += configurations.embeddedJetty


// you need to do the same for eclipse classpath, so you can use it to edit your java files
eclipse {
 classpath {
  plusConfigurations += [configurations.embeddedJetty] 
  // for gradle 2.5 use: plusConfigurations += [configurations.embeddedJetty]
 }
}
